@extends('template.default')

@section('more-content')
    <div class="wizard-container">
        <div class="card wizard-card" data-color="red" style="display: none;">
            <a href="{{ route("users.{$user_type}.list") }}" class="btn btn-primary btn-just-icon btn-round btn-back">
                <i class="material-icons">arrow_back</i>
            </a>

            <form
                action="{{ $type == 'create' ? route("users.{$user_type}.create.post") : route("users.{$user_type}.update.post", ['user_id' => $user['id']]) }}"
                method="POST" enctype="multipart/form-data" id="user-form">
                @csrf

                <div class="wizard-header">
                    <h3 class="wizard-title">
                        @lang($user_type . '.title-' . $type)
                    </h3>
                    <h5>@lang($user_type . '.description-create')</h5>
                </div>
                <div class="wizard-navigation">
                    <ul>
                        <li><a href="#mandatory-data" data-toggle="tab">@lang($user_type . '.tabs.mandatory-data')</a></li>
                        <li><a href="#complementary-data" data-toggle="tab">@lang($user_type . '.tabs.complementary-data')</a></li>

                        @if ($type == 'create')
                            <li><a href="#vehicle-data" data-toggle="tab">@lang($user_type . '.tabs.vehicle-data')</a></li>
                        @else
                            <li><a href="#vehicles" data-toggle="tab">@lang($user_type . '.tabs.vehicles-data')</a></li>
                        @endif
                    </ul>
                </div>

                <div class="tab-content">
                    @include('users.all.tabs.mandatory-data')
                    @include('users.all.tabs.complementary-data')

                    @if ($type == 'create')
                        @include('users.all.tabs.vehicle-data')
                    @else
                        @include('users.all.tabs.vehicles')
                    @endif
                </div>

                <div class="wizard-footer">
                    <div class="pull-right">
                        <button type='button' class='btn btn-next btn-fill btn-primary btn-wd'>@lang('general.next')</button>
                        <button type='submit' class='btn btn-finish btn-fill btn-primary btn-wd'>@lang('general.finish')</button>
                    </div>

                    <div class="pull-left">
                        <button type='button'
                            class='btn btn-previous btn-fill btn-default btn-wd'>@lang('general.previous')</button>
                    </div>

                    <div class="clearfix"></div>
                </div>
            </form>
        </div>

        @include('template.loading.wizard')
    </div>

    @if ($type == 'update')
        @include('users.all.history')
    @endif
@endsection

@section('free-content')
    @if ($type == 'update')
        @include('users.all.modal.vehicle-modal')
    @endif

    @include('users.all.modal.address-modal')
@endsection

@section('style')
    <style type="text/css">
        .car-principal-information {
            /*margin-bottom: 32px; background-color: whitesmoke;*/
            padding-bottom: 16px;
            border-radius: 16px;
        }

        .carplate-group,
        .yaers-group {
            margin-top: 6px;
        }

        .box-vehicle-data {
            margin-top: 12px;
            margin-bottom: 12px;
        }

        .square-car-color {
            padding: 6px;
            border-radius: 100%;
            display: inline-block;
            margin-right: 4px;
            box-shadow: 1px 1px 3px 0 rgba(0, 0, 0, 0.1), -1px -1px 3px 0 rgba(0, 0, 0, 0.1);
        }

        .bootstrap-select {
            margin-top: 0;
        }

        .no-vehicle {
            padding: 8px;
            text-align: center;
            font-weight: bold;
            background-color: #fbfbfb;
        }

        /* .form-group-car-model{ margin-top: 28px !important; } */
        .car-model-picture {
            margin-top: 12px;
            border-radius: 4px;
            object-fit: contain;
        }

        .vehicle-table-title {
            font-weight: bold;
            color: #555;
            font-size: 1.1em;
            border-bottom: 1px solid #eee;
        }

        .vehicle-table-line {
            padding-top: 6px;
            padding-bottom: 6px;
            border-bottom: 1px solid #e9e9e9;
        }

        .vehicle-table-line .col-actions .btn {
            margin-top: 0 !important;
            margin-bottom: 0 !important;
        }

        .color-box {
            display: block;
            width: 12px;
            height: 12px;
            top: 4px;
            margin: 0 auto;
            position: absolute;
            border-radius: 6px;
        }

        .color-text {
            padding-left: 16px;
        }

        /*.dropdown-toggle .square-car-color{ vertical-align: middle;  }*/

        #vehicle-modal .car-model-picture {
            height: 60px !important;
        }

        #vehicle-modal .loading-modal {
            width: 100%;
            height: 120px;
            text-align: center;
            justify-content: center;
            align-items: center;
        }

        #vehicle-modal .modal-footer .loading {
            display: inline-block;
            margin-right: 12px;
        }

        .car-model-picture-inside {
            width: 32px !important;
            height: 32px !important;
            border-radius: 100%;
            margin-right: 8px;
            object-fit: cover;
        }

        .row.vehicle-photos {
            padding: 0 20px;
        }

        .photo-container {
            display: inline-block;
        }

        .thumbnail {
            display: block;
            padding: 12px;
            margin-bottom: 0;
        }

        .btn-remove-photo {
            display: block;
            text-align: center;
            margin: 0 auto;
        }

        .user-vehicle-photo {
            width: 145px !important;
            height: 82px !important;
            object-fit: cover;
            border-radius: 12px;
            box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.19);
        }

        .add_vehicle_photo,
        .add_photo_without_vehicle {
            display: none !important;
        }

        .img-add-picture {
            border: 2px dashed #333;
        }

        .add-vehicle-thumbnail {
            margin: 0 !important;
        }

        .form-group-state {
            margin-top: 12px;
        }

        .col-loading,
        .col-cep-not-found {
            padding: 20px 5px;
        }

        .col-cep-not-found .error {
            color: #da750d
        }

        .title-history {
            font-weight: bold;
        }
    </style>
@endsection

@section('script')
    <script type="text/javascript">
        var create_vehicle_action = "{{ route('api.vehicles.create') }}";
        var update_vehicle_action = "{{ route('api.vehicles.update') }}";
        var update_vehicle_id = false;
        var photo_without_vehicle = {};

        var no_picture = "{{ asset('images/icons/no-image-icon.png') }}";

        /**
         * @TODO
         * Mover função para um helper global
         */
        $.fn.serializeObject = function() {
            var o = {};
            var a = this.serializeArray();
            $.each(a, function() {
                if (o[this.name]) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        };

        $(document).ready(function() {
            $('#document_cpf').on('input', function() {
                this.value = this.value.replace(/[^\d]+/g, '');

                var value = this.value;
                if (value.length == 11) {
                    value = value.replace(/(\d{3})(\d{3})(\d{3})(\d{2})/, "$1.$2.$3-$4");
                    this.value = value;
                }
            });

            $("#carplate-field").on("input", function() {
                var value = $(this).val();
                var pattern = /^[a-zA-Z]+$/;
                if (!pattern.test(value.substr(0, 3))) {
                    $(this).val(value.replace(/[^a-zA-Z]+/g, "").substr(0, 3));
                }
                value = $(this).val();
                if (value.length === 3) {
                    $(this).val(value + "-");
                } else if (value.length > 6) {
                    pattern = /^[a-zA-Z0-9]+$/;
                    if (!pattern.test(value.substr(4))) {
                        $(this).val(value.substr(0, 4) + value.substr(4).replace(/[^a-zA-Z0-9]+/g, ""));
                    }
                }
            });

            $("#vehicle-modal-carplate").on("input", function() {
                var value = $(this).val();
                var pattern = /^[a-zA-Z]+$/;
                if (!pattern.test(value.substr(0, 3))) {
                    $(this).val(value.replace(/[^a-zA-Z]+/g, "").substr(0, 3));
                }
                value = $(this).val();
                if (value.length === 3) {
                    $(this).val(value + "-");
                } else if (value.length > 6) {
                    pattern = /^[a-zA-Z0-9]+$/;
                    if (!pattern.test(value.substr(4))) {
                        $(this).val(value.substr(0, 4) + value.substr(4).replace(/[^a-zA-Z0-9]+/g, ""));
                    }
                }
            });

            $('#name').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#nickname').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#address_city').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#address_neighborhood').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#address_street').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#status_reason').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $('#phone').on('input', function() {
                this.value = this.value.replace(/[^\d]+/g, '');

                var value = this.value;
                if (value.length >= 10) {
                    value = '(' + value.substr(0, 2) + ') ' + value.substr(2, 4) + '-' + value.substr(6);
                    this.value = value;
                }
            });

            $('#rg').on('input', function() {
                this.value = this.value.replace(/[^\d]+/g, '');
            });

            $('#company_activities').on('input', function() {
                this.value = this.value.replace(/[^a-zA-Z\u00C0-\u017F\s]+/g, '');
            });

            $("#renavam").on("input", function() {
                let value = $(this).val();
                let regex = /^[0-9A-Za-z]+$/;
                if (!regex.test(value)) {
                    $(this).val(value.replace(/[^0-9A-Za-z]+/g, ''));
                }
            });

        });

        $(document).ready(function() {
            makeWizard('.wizard-card', {
                'animation': 'fade',
            });

            // $("#user-form").on('submit', function(){
            //     $(".phone_with_ddd").unmask();
            //     $(".cpf").unmask();
            //     $(".carplate").unmask();
            // });

            $("#add-vehicle").on('change', function() {
                if (this.checked) {
                    $(".vehicle-add-after").stop().fadeOut(360, function() {
                        $(".vehicle-data").stop().show(320);
                    });

                    $("#carplate-field").attr("required", true);
                    $("#car-model-field").attr("required", true);

                } else {
                    $(".vehicle-data").stop().hide(320, function() {
                        $(".vehicle-add-after").stop().fadeIn(360);
                    });

                    $("#carplate-field").removeAttr("required");
                    $("#car-model-field").removeAttr("required");
                }
            });

            $("#status").on('change', function() {
                if ($("#status").val() == '{{ \App\Models\User::ACTIVE_STATUS }}') {
                    $(".row-status-reason").stop().hide(300);
                } else {
                    $(".row-status-reason").stop().show(300);
                }

                if ($("#status").val() != '{{ \App\Models\User::SUSPENDED_STATUS }}') {
                    $(".row-suspended-time").stop().hide(300);
                } else {
                    $(".row-suspended-time").stop().show(300);
                }
            });

            $("#car-model-field, #vehicle-modal-car-model").on('change', function() {
                var id_selected = $(this).val();
                var option_selected = $(this).find("option[value=" + id_selected + "]");
                var model_picture = $(option_selected).attr('data-picture');

                if (!model_picture) {
                    model_picture = no_picture;
                }

                $(".car-model-picture").attr("src", model_picture);
            });

            $("#add-vehicle").change();

            @if (
                $user &&
                    array_key_exists('vehicle', $user) &&
                    array_key_exists('car_model_id', $user['vehicle']) &&
                    !empty($user['vehicle']['car_model_id']))
                $("#car-model-field").change();
            @endif
        });

        window.makeWizard = function($selector, $params) {
            $validator = false;

            // Validate params
            if (!$params)
                $params = {};

            if ($params.validator)
                $validator = $params.validator;

            // Default params ////
            if (!$params.nextSelector) $params.nextSelector = '.btn-next';
            if (!$params.previousSelector) $params.previousSelector = '.btn-previous';
            if (!$params.finishSelector) $params.finishSelector = '.btn-finish';
            if (!$params.loadingSelector) $params.loadingSelector = '.loading-wizard';
            if (!$params.animation) $params.animation = 'none';
            if (!$params.pictureSelector) $params.pictureSelector = '.wizard-picture';
            if (!$params.pictureRemoveSelector) $params.pictureRemoveSelector = '.wizard-picture-remove';

            // Wizard Initialization
            $bootstrapWizard = $($selector).bootstrapWizard({
                'tabClass': 'nav nav-pills',
                'nextSelector': $params.nextSelector,
                'previousSelector': $params.previousSelector,

                onNext: function(tab, navigation, index) {
                    // Call onNext callback in params
                    if ($params.onNext)
                        $params.onNext(tab, navigation, index);

                    var $valid = $($selector + ' form').valid();

                    if (!$valid) {
                        if ($validator)
                            $validator.focusInvalid();

                        return false;
                    }
                },

                onInit: function(tab, navigation, index) {
                    // Call onInit callback in params
                    if ($params.onInit)
                        $params.onInit(tab, navigation, index);

                    if ($params.animation != "none")
                        showWizard($params.animation);

                    //check number of tabs and fill the entire row
                    var $total = navigation.find('li').length;
                    var $wizard = navigation.closest($selector);

                    $first_li = navigation.find('li:first-child a').html();
                    $moving_div = $('<div class="moving-tab">' + $first_li + '</div>');
                    $($selector + ' .wizard-navigation').append($moving_div);

                    refreshAnimation($wizard, index);

                    $('.moving-tab').css('transition', 'transform 0s');
                },

                onTabClick: function(tab, navigation, index) {
                    // Call onTabClick callback in params
                    if ($params.onTabClick)
                        $params.onTabClick(tab, navigation, index);

                    var $valid = $($selector + ' form').valid();

                    if (!$valid) {
                        return false;
                    } else {
                        return true;
                    }
                },

                onTabShow: function(tab, navigation, index) {
                    // Call onTabShow callback in params
                    if ($params.onTabShow)
                        $params.onTabShow(tab, navigation, index);

                    var $total = navigation.find('li').length;
                    var $current = index + 1;

                    var $wizard = navigation.closest($selector);

                    // If it's the last tab then hide the last button and show the finish instead
                    if ($current >= $total) {
                        $($wizard).find($params.nextSelector).hide();
                        $($wizard).find($params.finishSelector).show();
                    } else {
                        $($wizard).find($params.nextSelector).show();
                        $($wizard).find($params.finishSelector).hide();
                    }

                    button_text = navigation.find('li:nth-child(' + $current + ') a').html();
                    // console.log("TEXT = ", button_text);
                    // button_text.find("i").css("display", "block");


                    setTimeout(function() {
                        $('.moving-tab').html('').append(button_text);
                    }, 150);

                    var checkbox = $('.footer-checkbox');

                    if (!index == 0) {
                        $(checkbox).css({
                            'opacity': '0',
                            'visibility': 'hidden',
                            'position': 'absolute'
                        });
                    } else {
                        $(checkbox).css({
                            'opacity': '1',
                            'visibility': 'visible'
                        });
                    }

                    refreshAnimation($wizard, index);
                }
            });

            // Prepare the preview for profile picture
            $($params.pictureSelector).change(function() {
                readURL(this, $(this).attr("data-preview"));
            });

            $('[data-toggle="wizard-radio"]').click(function() {
                wizard = $(this).closest($selector);
                wizard.find('[data-toggle="wizard-radio"]').removeClass('active');
                $(this).addClass('active');
                $(wizard).find('[type="radio"]').removeAttr('checked');
                $(this).find('[type="radio"]').attr('checked', 'true');
            });

            $('[data-toggle="wizard-checkbox"]').click(function() {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                    $(this).find('[type="checkbox"]').removeAttr('checked');
                } else {
                    $(this).addClass('active');
                    $(this).find('[type="checkbox"]').attr('checked', 'true');
                }
            });

            $('.set-full-height').css('height', 'auto');

            // Function to show image before upload
            function readURL(input, preview_selector) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function(e) {
                        $(preview_selector).attr('src', e.target.result).fadeIn('slow');

                        if ($($params.pictureRemoveSelector))
                            $($params.pictureRemoveSelector).val('false');
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $(window).resize(function() {
                $($selector).each(function() {
                    $wizard = $(this);

                    index = $wizard.bootstrapWizard('currentIndex');
                    refreshAnimation($wizard, index);

                    $('.moving-tab').css({
                        'transition': 'transform 0s'
                    });
                });
            });

            function refreshAnimation($wizard, index) {
                $total = $wizard.find('.nav li').length;
                $li_width = 100 / $total;

                total_steps = $wizard.find('.nav li').length;
                move_distance = $wizard.width() / total_steps;
                index_temp = index;
                vertical_level = 0;

                mobile_device = $(document).width() < 600 && $total > 3;

                if (mobile_device) {
                    move_distance = $wizard.width() / 2;
                    index_temp = index % 2;
                    $li_width = 50;
                }

                $wizard.find('.nav li').css('width', $li_width + '%');

                step_width = move_distance;
                move_distance = move_distance * index_temp;

                $current = index + 1;

                if ($current == 1 || (mobile_device == true && (index % 2 == 0))) {
                    move_distance -= 8;
                } else if ($current == total_steps || (mobile_device == true && (index % 2 == 1))) {
                    move_distance += 8;
                }

                if (mobile_device) {
                    vertical_level = parseInt(index / 2);
                    vertical_level = vertical_level * 38;
                }

                $wizard.find('.moving-tab').css('width', step_width);
                $('.moving-tab').css({
                    'transform': 'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',
                    'transition': 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'

                });
            }

            /**
             * Show wizard with animation
             * @param string animation
             * @author Davi Souto
             * @since 06/06/2020
             */
            function showWizard(animation) {
                if (animation == "fade") {
                    $($params.loadingSelector).fadeOut(260, function() {
                        $($selector).fadeIn(600);
                    });
                }
            }

            /**
             * Remove wizard picture
             * @author Davi Souto
             * @since 09/06/2020
             */
            $($($params.pictureRemoveSelector).attr("data-dispatch")).on('click', function() {
                $($params.pictureSelector).val('');
                $($($params.pictureSelector).attr("data-preview")).attr("src", $($params.pictureSelector).attr(
                    "data-default"));

                $($params.pictureRemoveSelector).val('true');
            })

            setTimeout(function() {
                $($selector).addClass('active');
            }, 600);

            $bootstrapWizard.$params = $params;

            return $bootstrapWizard;
        }

        function showVehicleModal(vehicle_id) {
            $('#vehicle-modal').modal('show');

            if (vehicle_id) {
                getVehicleData(vehicle_id);

                update_vehicle_id = vehicle_id;
            } else {
                $("#vehicle-form").show();
                $("#vehicle-form").find('.selectpicker').selectpicker('refresh');
                $(".car-model-picture").attr('src', '{{ asset('images/icons/no-image-icon.png') }}');

                $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', false).removeAttr('disabled');

                update_vehicle_id = false;
            }
        }

        function getVehicleData(vehicle_id) {
            $(".loading-modal").show();

            $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', true).attr('disabled', true);

            $.ajax({
                url: "{{ route('api.vehicles.get') }}/" + vehicle_id,
                method: "GET"
            }).then(function(response) {
                if (response.status == 'success') {
                    let vehicle = response.data;

                    $("#vehicle-modal-carplate").val(vehicle.carplate);
                    $("#vehicle-modal-renavam").val(vehicle.document_renavam);
                    $("#vehicle-modal-chassis").val(vehicle.chassis);
                    $("#vehicle-modal-carplate").change();
                    $("#vehicle-modal-renavam").change();
                    $("#vehicle-modal-chassis").change();

                    if (vehicle.car_model) {
                        $("#vehicle-modal-car-model").val(vehicle.car_model.id);
                    }

                    if (vehicle.car_color) {
                        $("#vehicle-modal-car-color").val(vehicle.car_color.id);
                    }

                    if (vehicle.year_manufacture) {
                        $("#vehicle-modal-year-manufacture").val(vehicle.year_manufacture);
                    }

                    if (vehicle.model_year) {
                        $("#vehicle-modal-model-year").val(vehicle.model_year);
                    }
                    $(".loading-modal").hide();
                    $("#vehicle-form").show();
                    $("#vehicle-form").find('.selectpicker').selectpicker('refresh');
                    $("#vehicle-modal-car-model").change();

                    $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', false).removeAttr('disabled');
                    // $(".loading-modal").hide(function(){
                    //     $("#vehicle-form").show(325);
                    // }, 250);
                } else showError("Ops, ocorreu um erro: " + response.message);
            }).catch(function(err) {
                console.log("Erro:", err);
                showError("Ops, ocorreu um erro: " + err);
            });
        }

        function saveVehicle() {
            var action = create_vehicle_action;

            if (update_vehicle_id) {
                action = update_vehicle_action + '/' + update_vehicle_id;
            }

            $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', true).attr('disabled', true);
            $("#vehicle-modal .modal-footer").find(".loading").show();

            $.ajax({
                method: 'POST',
                url: action,
                data: $("#vehicle-form").serializeObject(),
            }).then(function(response) {
                $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', false).removeAttr('disabled');
                $("#vehicle-modal .modal-footer").find(".loading").hide();

                if (response && response.status == 'success') {
                    showSuccess(response.message);

                    let vehicle = response.data;

                    if (!update_vehicle_id) {
                        var clone_line = $("#vehicles-table").find('.vehicle-table-line.dont-remove').clone();

                        $(clone_line).removeClass('dont-remove');
                        $(clone_line).attr('data-vehicle-id', vehicle.id);

                        $(clone_line).find('.vehicle-photos-rows').attr('id', 'vehicle-photos-' + vehicle.id);
                        $(clone_line).find('.add_vehicle_photo').attr('id', 'add_vehicle_photo_' + vehicle.id).attr(
                            'onchange', 'uploadVehiclePhoto(' + vehicle.id + ')');
                        $(clone_line).find('.btn-add-vehicle-photo').on('click', function() {
                            $('#add_vehicle_photo_' + vehicle.id).click();
                        });
                        // ('onclick', "$('#add_vehicle_photo_" +  + "').click()");

                        $("#vehicles-table").append(clone_line);
                    }

                    let line = $("#vehicles-table").find(".vehicle-table-line[data-vehicle-id='" + vehicle.id +
                        "']");

                    $(line).find('.col-carplate').html(vehicle.carplate_formatted || '-');

                    if (vehicle.car_model) {
                        $(line).find('.col-model').find('.car-model-text')
                            .html( /* vehicle.car_model.car_brand.name + ' ' + */ vehicle.car_model.name);

                        if (vehicle.car_model.picture_url) {
                            $(line).find('.col-model').find('.car-model-picture-inside').attr('src', vehicle
                                .car_model.picture_url);
                        }
                    }

                    if (vehicle.car_color) {
                        $(line).find('.col-color').find('.color-box').css({
                            'background-color': vehicle.car_color.value
                        });
                        $(line).find('.col-color').find('.color-text').html(vehicle.car_color.name);
                    }

                    $(line).find('.btn-edit-vehicle').attr('onclick', 'showVehicleModal(' + vehicle.id + ')');
                    $(line).find('.btn-remove-vehicle').attr('onclick', 'removeVehicle(' + vehicle.id + ')');

                    console.log(line);
                    $(line).show();

                    $(".no-vehicle").hide();

                    $('#vehicle-modal').modal('hide');
                } else {
                    let error = "Ocorreu um erro ao salvar o veículo";

                    if (response && response.message) {
                        error = response.message;
                    }

                    $("#vehicle-modal .modal-footer").find(".btn").prop('disabled', false).removeAttr('disabled');
                    $("#vehicle-modal .modal-footer").find(".loading").hide();

                    showError(error);
                }
            }).catch(function(err) {
                console.log("Erro:", err);
                showError("Ops, ocorreu um erro: " + err);
            })
        }

        function removeVehicle(vehicle_id) {
            if (!vehicle_id) {
                showError("Veículo não encontrado");
            }

            Swal.fire({
                title: '{{ __('general.confirm-delete.title') }}',
                text: '{{ __('general.confirm-delete.text') }}',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: '{{ __('general.confirm-delete.confirm') }}',
                cancelButtonText: '{{ __('general.confirm-delete.cancel') }}',
            }).then((result) => {
                if (result.value) {
                    showLoading();

                    $.ajax({
                        method: 'POST',
                        url: "{{ route('api.vehicles.delete') }}/" + vehicle_id,
                    }).then(function(response) {
                        hideLoading();

                        if (response && response.status == 'success') {
                            showSuccess(response.message);

                            $("#vehicles-table").find(".vehicle-table-line[data-vehicle-id='" + vehicle_id +
                                "']").remove();
                        } else {
                            let error = "Ocorreu um erro ao remover o veículo";

                            if (response && response.message) {
                                error = response.message;
                            }

                            showError(error);
                        }
                    }).catch(function(err) {
                        console.log("Erro:", err);
                        showError("Ops, ocorreu um erro: " + err);
                    });
                }
            });
        }

        function showError(msg) {
            Swal.fire({
                title: '{{ __('general.fail') }}',
                text: msg,
                icon: 'error',
            });
        }

        function showSuccess(msg) {
            Swal.fire({
                title: '{{ __('general.success') }}',
                text: msg,
                icon: 'success',
            });
        }

        $('#vehicle-modal').on('hidden.bs.modal', function() {
            $('#vehicle-form')[0].reset();
            $("#vehicle-form").hide();
            $("#loading-modal").hide();
        });

        function uploadVehiclePhoto(vehicle_id) {
            let photo = $("#add_vehicle_photo_" + vehicle_id).val();

            if (photo) {
                let data = new FormData();

                data.append('photo', $('#add_vehicle_photo_' + vehicle_id)[0].files[0]);

                showLoading();

                $.ajax({
                    method: 'POST',
                    url: "/api/vehicles/" + vehicle_id + "/photo/upload",
                    headers: {
                        "X-CSRF-TOKEN": "{{ csrf_token() }}"
                    },
                    data: data,
                    dataType: 'JSON',
                    contentType: false,
                    cache: false,
                    processData: false,
                }).then(function(response) {
                    if (response && response.status == 'success') {
                        let data = response.data;

                        $("#vehicle-photos-" + vehicle_id).prepend(`
                            <div class="photo-container" id="photo-` + data.id + `">
                                <a href="` + data.photo + `" class="thumbnail">
                                    <img src="` + data.photo +
                            `" alt="" class="user-vehicle-photo">
                                </a>
                                <button class="btn btn-primary btn-simple btn-sm btn-remove-photo" type="button" onclick="removeVehiclePhoto(` +
                            vehicle_id + `, ` + data.id + `)">Remover foto</button>
                            </div>
                        `);

                        triggerAddPhotoVisible(vehicle_id);
                        hideLoading();
                    } else {
                        hideLoading();

                        let error = "Ocorreu um erro";

                        if (response && response.message) {
                            error = response.message;
                        }

                        showError(error);
                    }
                }).catch(function(err) {
                    hideLoading();

                    console.log("Erro:", err);
                    showError("Ops, ocorreu um erro: " + err);
                })
            }
        }

        function uploadPhotoWithoutVehicle() {
            let data = new FormData();

            data.append('photo', $('#add_photo_without_vehicle')[0].files[0]);

            showLoading();

            $.ajax({
                method: 'POST',
                url: "/api/photo-without-vehicle",
                headers: {
                    "X-CSRF-TOKEN": "{{ csrf_token() }}"
                },
                data: data,
                dataType: 'JSON',
                contentType: false,
                cache: false,
                processData: false,
            }).then(function(response) {
                if (response && response.status == 'success') {
                    let uploaded_photo = response.data;
                    let photo_id = Math.floor(Math.random() * 100000);

                    $("#vehicle-photos").prepend(`
                            <div class="photo-container" id="photo-` + photo_id + `">
                                <a href="` + uploaded_photo + `" class="thumbnail">
                                    <img src="` + uploaded_photo +
                        `" alt="" class="user-vehicle-photo">
                                </a>
                                <button class="btn btn-primary btn-simple btn-sm btn-remove-photo" type="button" onclick="removePhotoWithoutVehicle(` +
                        photo_id + `)">Remover foto</button>
                            </div>
                        `);

                    photo_without_vehicle[photo_id] = uploaded_photo;

                    triggerAddPhotoVisible();
                    populateAddPhotos();
                    hideLoading();
                } else {
                    hideLoading();

                    let error = "Ocorreu um erro";

                    if (response && response.message) {
                        error = response.message;
                    }

                    showError(error);
                }
            }).catch(function(err) {
                hideLoading();

                console.log("Erro:", err);
                showError("Ops, ocorreu um erro: " + err);
            })
        }

        function removeVehiclePhoto(vehicle_id, photo_id) {
            showLoading();

            $.ajax({
                method: 'POST',
                url: "/api/vehicles/" + vehicle_id + "/photo/" + photo_id + "/delete",
                headers: {
                    "X-CSRF-TOKEN": "{{ csrf_token() }}"
                },
            }).then(function(response) {
                if (response && response.status == 'success') {
                    $("#photo-" + photo_id).remove();

                    triggerAddPhotoVisible(vehicle_id);
                    hideLoading();
                } else {
                    hideLoading();

                    let error = "Ocorreu um erro";

                    if (response && response.message) {
                        error = response.message;
                    }

                    showError(error);
                }
            }).catch(function(err) {
                hideLoading();

                console.log("Erro:", err);
                showError("Ops, ocorreu um erro: " + err);
            });
        }

        function removePhotoWithoutVehicle(photo_id) {
            delete photo_without_vehicle[photo_id];

            $("#photo-" + photo_id).remove();

            triggerAddPhotoVisible();
            populateAddPhotos();
        }

        function triggerAddPhotoVisible(vehicle_id) {
            let find = "#vehicle-photos";

            if (vehicle_id) {
                find += "-" + vehicle_id;
            }

            let qtd_photos = $(find).find(".photo-container").length;

            if (qtd_photos >= 5) {
                $(find).parent().find(".add-vehicle-photo-container").hide();
            } else {
                $(find).parent().find(".add-vehicle-photo-container").show();
            }
        }

        function populateAddPhotos() {
            $("#add-photos-inputs").find("input").remove();

            Object.keys(photo_without_vehicle).forEach(function(key) {
                var add_photo = photo_without_vehicle[key];

                $("#add-photos-inputs").append(`<input type="hidden" name="vehicle[add_photo][]" value="` +
                    add_photo + `" >`);
            });
        }

        function changeResidentialAddress() {
            return changeAddress('home');
        }

        function changeCommercialAddress() {
            return changeAddress('commercial');
        }

        function changeAddress(prefix) {
            if ($("#" + prefix + "_address_zip_code").val()) {
                $("#address_zip_code").val($("#" + prefix + "_address_zip_code").val()).change().valid();
                $("#address_state").val($("#" + prefix + "_address_state").val()).change().valid();
                $("#address_city").val($("#" + prefix + "_address_city").val()).change().valid();
                $("#address_neighborhood").val($("#" + prefix + "_address_neighborhood").val()).change().valid();
                $("#address_street").val($("#" + prefix + "_address_street_address").val()).change().valid();
                $("#address_number").val($("#" + prefix + "_address_number").val()).change().valid();
                $("#address_complement").val($("#" + prefix + "_address_complement").val()).change().valid();

                $("#address_state").selectpicker('refresh');
            }

            $('#address-modal').modal('show');
            $("#address-modal").find('#address_prefix').val(prefix);
        }

        function findAddressByCep() {
            let cep = $("#address_zip_code").val();

            if (cep.length < 9) {
                return false;
            }

            setLoadingCep(true);

            $.ajax({
                method: 'GET',
                url: "/api/service/cep/find/" + cep,
                headers: {
                    "X-CSRF-TOKEN": "{{ csrf_token() }}"
                },
            }).then((response) => {
                if (response.status == 'success') {
                    let data = response.data;

                    $("#address_state").val(data.state_initials);
                    $("#address_state").selectpicker('refresh');
                    $("#address_state").valid();

                    $("#address_city").val(data.city);
                    $("#address_city").change();
                    $("#address_city").valid();

                    $("#address_neighborhood").val(data.neighborhood);
                    $("#address_neighborhood").change();
                    $("#address_neighborhood").valid();

                    $("#address_street").val(data.street_address);
                    $("#address_street").change();
                    $("#address_street").valid();

                    if (data.complement) {
                        $("#address_complement").val(data.complement);
                        $("#address_complement").change();
                    }

                    setTimeout(function() {
                        $("#address_number").focus();
                    }, 20);
                } else {
                    $("#address_state").val('');
                    $("#address_state").selectpicker('refresh');
                    $("#address_state").valid();

                    $("#address_city").val('').change().valid();
                    $("#address_neighborhood").val('').change().valid();
                    $("#address_street").val('').change().valid();

                    $(".col-cep-not-found").fadeIn(200);
                }

                setLoadingCep(false);
            }).catch((err) => {
                setLoadingCep(false);

                $(".col-cep-not-found").fadeIn(200);
            });
        }

        function saveAddress() {
            $("#form_address").submit();

            fixValidation("#form_address");
        }

        function setLoadingCep(loading) {
            if (loading) {
                $(".col-loading").fadeIn(250);
                $(".col-cep-not-found").fadeOut(100);
            } else {
                $(".col-loading").fadeOut(200);
            }

            $("#address_state").prop('disabled', loading);
            $("#address_city").prop('disabled', loading);
            $("#address_neighborhood").prop('disabled', loading);
            $("#address_street").prop('disabled', loading);
            $("#address_number").prop('disabled', loading);
            $("#address_complement").prop('disabled', loading);

            $("#address_state").selectpicker('refresh');
        }

        function generateAddressesResume(address_prefix, with_prefix) {
            let address_resume = with_prefix ? $("#" + address_prefix + "_address_street_address").val() : $(
                "#address_street").val();

            if (with_prefix) {
                if ($("#" + address_prefix + "_address_number").val()) {
                    address_resume += ", " + $("#" + address_prefix + "_address_number").val();
                }

                if ($("#" + address_prefix + "_address_complement").val()) {
                    address_resume += ", " + $("#" + address_prefix + "_address_complement").val();
                }

                address_resume += " - " + $("#" + address_prefix + "_address_neighborhood").val();
                address_resume += " - " + $("#" + address_prefix + "_address_city").val();
                address_resume += "/" + $("#" + address_prefix + "_address_state").val();
            } else {
                if ($("#address_number").val()) {
                    address_resume += ", " + $("#address_number").val();
                }

                if ($("#address_complement").val()) {
                    address_resume += ", " + $("#address_complement").val();
                }

                address_resume += " - " + $("#address_neighborhood").val();
                address_resume += " - " + $("#address_city").val();
                address_resume += "/" + $("#address_state").val();
            }

            $("#" + address_prefix + "_address_input").val(address_resume).change();
        }

        $(function() {
            $('.thumbnail').viewbox();

            $("#address-modal").on('shown.bs.modal', function() {
                $("#address_zip_code").focus();
            });

            $("#address-modal").on('hidden.bs.modal', function() {
                $("#form_address")[0].reset();
                $("#form_address").find(".selectpicker").selectpicker('refresh');
            });

            @if ($home_address)
                generateAddressesResume('home', true);
            @endif

            @if ($commercial_address)
                generateAddressesResume('commercial', true);
            @endif

            $("#form_address").validate({
                rules: {
                    address_zip_code: "required",
                    address_state: "required",
                    address_city: "required",
                    address_neighborhood: "required",
                    address_street: "required"
                },
                submitHandler: function(form) {
                    // Save the address
                    const address_prefix = $("#address_prefix").val();

                    $("#" + address_prefix + "_address_zip_code").val($("#address_zip_code").val());
                    $("#" + address_prefix + "_address_state").val($("#address_state").val());
                    $("#" + address_prefix + "_address_city").val($("#address_city").val());
                    $("#" + address_prefix + "_address_neighborhood").val($("#address_neighborhood")
                        .val());
                    $("#" + address_prefix + "_address_street_address").val($("#address_street").val());
                    $("#" + address_prefix + "_address_number").val($("#address_number").val());
                    $("#" + address_prefix + "_address_complement").val($("#address_complement").val());

                    generateAddressesResume(address_prefix);

                    $("#" + address_prefix + "-address-add-div").hide();
                    $("#" + address_prefix + "-address-change-div").show();

                    $("#address-modal").modal('hide');

                    return false;
                }
            });
        });
    </script>
@endsection
